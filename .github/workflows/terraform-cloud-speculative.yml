name: terraform-cloud-speculative

on:
  pull_request:
    branches:
      - main
    paths:
      - '**/*.tf'
      - '**/*.tfvars'
      - '.terraform.lock.hcl'
  push:
    branches:
      - codex
      - agents
    paths:
      - '**/*.tf'
      - '**/*.tfvars'
      - '.terraform.lock.hcl'

permissions:
  contents: read
  pull-requests: write

env:
  TF_CLOUD_ORGANIZATION: ${{ vars.TF_CLOUD_ORGANIZATION }}
  TF_WORKSPACE: ${{ vars.TF_WORKSPACE }}
  RAW_CONFIG_DIRECTORY: ${{ vars.TF_CONFIG_DIRECTORY }}
  TF_API_TOKEN: ${{ secrets.TFC_TOKEN }}

jobs:
  speculative-run:
    name: Trigger speculative plan in Terraform Cloud
    runs-on: ubuntu-latest
    if: ${{ env.TF_CLOUD_ORGANIZATION != '' && env.TF_WORKSPACE != '' && env.TF_API_TOKEN != '' }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Resolve Terraform configuration directory
        run: |
          if [ -z "${RAW_CONFIG_DIRECTORY:-}" ]; then
            echo "CONFIG_DIRECTORY=." >> "$GITHUB_ENV"
          else
            echo "CONFIG_DIRECTORY=${RAW_CONFIG_DIRECTORY}" >> "$GITHUB_ENV"
          fi

      - name: Upload configuration to Terraform Cloud
        id: upload
        uses: hashicorp/tfc-workflows-github/actions/upload-configuration@v1.3.2
        with:
          workspace: ${{ env.TF_WORKSPACE }}
          directory: ${{ env.CONFIG_DIRECTORY }}
          speculative: true

      - name: Create speculative run
        id: run
        uses: hashicorp/tfc-workflows-github/actions/create-run@v1.3.2
        continue-on-error: true
        with:
          workspace: ${{ env.TF_WORKSPACE }}
          configuration_version: ${{ steps.upload.outputs.configuration_version_id }}
          plan_only: true
          message: "Speculative plan from GitHub Actions for ${{ github.sha }}"

      - name: Check for run creation errors
        if: ${{ steps.run.outcome == 'failure' }}
        run: |
          echo "Terraform Cloud run could not be created."
          exit 1

      - name: Fetch plan summary
        id: plan-output
        if: ${{ steps.run.outputs.plan_id != '' }}
        uses: hashicorp/tfc-workflows-github/actions/plan-output@v1.3.2
        with:
          plan: ${{ steps.run.outputs.plan_id }}

      - name: Update pull request with plan details
        if: ${{ github.event_name == 'pull_request' && steps.run.outputs.run_link != '' }}
        uses: actions/github-script@v7
        env:
          PLAN_ADD: ${{ steps.plan-output.outputs.add }}
          PLAN_CHANGE: ${{ steps.plan-output.outputs.change }}
          PLAN_DESTROY: ${{ steps.plan-output.outputs.destroy }}
          RUN_LINK: ${{ steps.run.outputs.run_link }}
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const { data: comments } = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
            });

            const marker = 'Terraform Cloud Plan Output';
            const planSummary = process.env.PLAN_ADD
              ? `Plan: ${process.env.PLAN_ADD} to add, ${process.env.PLAN_CHANGE} to change, ${process.env.PLAN_DESTROY} to destroy.`
              : 'Plan summary unavailable. Check Terraform Cloud run for details.';
            const body = `#### ${marker}\n\n` +
              '```\n' +
              `${planSummary}\n` +
              '```\n' +
              `View the full run on Terraform Cloud: ${process.env.RUN_LINK}`;

            const existing = comments.find(comment => comment.user.type === 'Bot' && comment.body.includes(marker));

            if (existing) {
              await github.rest.issues.updateComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: existing.id,
                body,
              });
            } else {
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number,
                body,
              });
            }

      - name: Fail workflow if run did not complete
        if: ${{ steps.run.outcome == 'success' && steps.run.outputs.run_status != 'planned_and_finished' }}
        run: |
          echo "Terraform Cloud run requires attention"
          echo "Status: ${{ steps.run.outputs.run_status }}"
          echo "Link: ${{ steps.run.outputs.run_link }}"
          exit 1

      - name: Ensure configuration upload succeeded
        if: ${{ steps.upload.outputs.status != 'Success' }}
        run: |
          echo "Terraform Cloud configuration upload failed"
          exit 1
